<div class="container">
  <div class="row border-bottom">
    <h4 class="pull-left"><%= @user.email %></h4>
    <% unless current_user == @user || current_user.has_friendship?(@user) %>
    <%= link_to "Add Friend", friendships_path(friend_id: @user), method: "POST", class: "pull-right btn btn-primary" %>
    <% end %>
  </div>
  <div class="row border-bottom map-container">
    <%= render "map" %>
  </div>

  <div class="row">
    <h3>Friends</h3>
    <div class="column">
      <table class="table">
        <tbody>
          <% @user.mutual_friends.each do |friend| %>
          <tr>
            <td><%= link_to friend.username, user_path(friend.username) %></td>
            <td><%= friend.email %></td>
            <% if current_user == @user %>
              <td><%= link_to "Remove", friendships_path(:id => friend), :method => "DELETE", class: "pull-right btn btn-danger" %>
            <% end %>
          </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>

  <% if current_user == @user %>
    <div class="row">
      <h3>Friend Requests</h3>
      <div class="column">
        <table class="table">
          <tbody>
            <% @user.requested_friends.each do |request| %>
            <tr>
              <td><%= link_to request.username, user_path(request.username) %></td>
              <td><%= request.email %></td>
              <td>
                <%= link_to "Accept", friendships_path(:id => request), :method => "PUT", class: "pull-right btn btn-success" %>
                <%= link_to "Decline", friendships_path(:id => request), :method => "DELETE", class: "pull-right btn btn-danger" %>
              </td>
             </tr>
            <% end %>
            <% @user.pending_friends.each do |friend| %>
            <tr>
              <td><%= link_to friend.username, user_path(friend.username) %></td>
              <td><%= friend.email %></td>
            </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  <% end %>
</div>
<% content_for(:javascript) do %>
  OpenLayer.init(JSON.parse("<%= j raw(@locations.to_json(include: :user)) %>"), "<%= current_user.id %>", "<%= @user.id %>");
<% end %>
